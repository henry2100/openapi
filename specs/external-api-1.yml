openapi: 3.0.1
info:
  title: SeerBit API Reference
  contact: {}
  version: "1.0"
servers:
- url: https://seerbitapi.com/api/v2
tags:
- name: AUTHENTICATION
- name: STANDARD CHECKOUT
- name: ORDER CHECKOUT
- name: PAYMENT METHOD
- name: MOMO
- name: NON 3DS PAYMENT
- name: CARD
- name: ACCOUNT
- name: TOKENIZE
- name: AUTHORISE
- name: PREAUTHORIZATION
- name: RECURRENT
paths:
  /encrypt/keys:
    post:
      tags:
      - AUTHENTICATION
      summary: Generate Encrypted Secret Key
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: GenerateEncryptedSecretKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateEncryptedSecretKeyRequest'
        required: true
      responses:
        200:
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateEncryptedSecretKeyResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
              examples:
                404Response:
                  $ref: '#/components/examples/404Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                  $ref: '#/components/examples/500Response'
      deprecated: false
      x-codegen-request-body-name: Body
  /encrypt/hashs:
    post:
      tags:
      - STANDARD CHECKOUT
      summary: Generate Hash
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: GenerateHash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateHashRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateHashResponse'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
              examples:
                404Response:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                  $ref: '#/components/examples/500Response'
      deprecated: false
      x-codegen-request-body-name: Body
  /payments:
    post:
      tags:
      - STANDARD CHECKOUT
      summary: Payment Link From Checkout
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: PaymentLinkFromCheckout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentLinkFromCheckoutRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkFromCheckoutResponse'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Header Token Missing
          content:
            application/json:
              schema:
                type: object
              examples:
                403Response:
                  $ref: '#/components/examples/403Response'
                403Response1:
                  $ref: '#/components/examples/403Response1'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
              examples:
                404Response:
                  $ref: '#/components/examples/404Response'
                400Response1:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                PaymentLinkFromCheckout500Response:
                  $ref: '#/components/examples/PaymentLinkFromCheckout500Response'
                PaymentLinkFromCheckout500Response1:
                  $ref: '#/components/examples/PaymentLinkFromCheckout500Response1'
                PaymentLinkFromCheckout500Response2:
                  $ref: '#/components/examples/PaymentLinkFromCheckout500Response2'
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
  /payments/order:
    post:
      tags:
      - ORDER CHECKOUT
      summary: Create Order Before Payment
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: CreateOrderBeforePayment
      requestBody:
        content:
          application/json:
            schema:
                type: object
            examples:
              # CreateOrderRequest:
              #   $ref: '#/components/examples/CreateOrderRequest'
              CreateOrderRequest1:
                $ref: '#/components/examples/CreateOrderRequest2'
              
              
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder200Response:
                  $ref: '#/components/examples/CreateOrder200Response'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                Order403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
                CreateOrder400Response1:
                  $ref: '#/components/examples/Order404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
                500Response5:
                    $ref: '#/components/examples/500Response5'    
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body    
  /products/orders:
    post:
      tags:
      - ORDER CHECKOUT
      summary: Create Order After Payment
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: CreateOrder
      requestBody:
        content:
          application/json:
            schema:
                type: object
            examples:
              CreateOrderRequest:
                $ref: '#/components/examples/CreateOrderRequest'
              # CreateOrderRequest1:
              #   $ref: '#/components/examples/CreateOrderRequest2'
              
              
        required: true
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder201Response'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                Order403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
                CreateOrder400Response1:
                  $ref: '#/components/examples/Order404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
    put:
      tags:
      - ORDER CHECKOUT
      summary: Update Order
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: UpdateOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:  
              UpdateOrderRequest:  
                $ref: '#/components/examples/UpdateOrderRequest'
        required: true
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrder201Response'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                 type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
                CreateOrder400Response1:
                  $ref: '#/components/examples/Order404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
  /products/orders/publicKey/SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u:
    get:
      tags:
      - ORDER CHECKOUT
      summary: Get Order By Public Key
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: GetOrderByPublicKey
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderByPublicKey201Response'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                 type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
                CreateOrder400Response2:
                  $ref: '#/components/examples/Order404Response2'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
  /products/orders/publicKey/SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u/paymentReference/0w0eimkizc41602513327447:
    get:
      tags:
      - ORDER CHECKOUT
      summary: Get Order By Public Key And Payment Reference
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: GetOrderByPublicKeyAndPaymentReference
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderByPublicKeyAndPaymentReference201Response'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                 type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
                CreateOrder400Response2:
                  $ref: '#/components/examples/Order404Response2'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
  /products/orders/publicKey/SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u/orderId/wil0f47b62:
    get:
      tags:
      - ORDER CHECKOUT
      summary: Get Order By Public Key and Order Id
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: GetOrderByPublicKeyandOrderId
      responses:
        # 200:
        #   description: ""
        #   content:
        #     application/json:
        #       schema:
        #         $ref: '#/components/schemas/GetOrderByPublicKeyAndOrderIdResponse'
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderByPublicKeyAndOrderId201Response'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                 type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
                CreateOrder400Response2:
                  $ref: '#/components/examples/Order404Response2'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
  /payments/initiates:
    post:
      tags:
      - PAYMENT METHOD
      summary: Initiate Payment
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: InitiatePayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              momoRequestPaylaod:
                $ref: '#/components/examples/momoRequestPaylaod'
              cardRequestPaylaod:
                $ref: '#/components/examples/cardRequestPayload'
              accountRequestPaylaod:
                $ref: '#/components/examples/accountRequestPaylaod'
              transferRequestPaylaod:
                $ref: '#/components/examples/transferRequestPaylaod'
              
              
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
              examples:
                InitiateAccountPaymentResponse:
                  $ref: '#/components/examples/InitiateAccountPaymentResponse'
                InitiateAccountPaymentS12Response:
                  $ref: '#/components/examples/InitiateAccountPaymentS12Response'
                InitiateAccountPaymentS7Response:
                  $ref: '#/components/examples/InitiateAccountPaymentS7Response'
                InitiateCardPaymentResponse:
                  $ref: '#/components/examples/InitiateCardTransactionsResponse'
                InitiateCardTransactionsS12Response:
                     $ref: '#/components/examples/InitiateCardTransactionsS12Response'
                InitiateCardTransactionsS18Response:
                  $ref: '#/components/examples/InitiateCardTransactionsS18Response'
                InitiateTransferResponse:
                   $ref: '#/components/examples/InitiateTransferResponse'
                GhanaMomoResponse:
                    $ref: '#/components/examples/GhanaMomoResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                # $ref: '#/components/schemas/InitiatePayment400Response'
              examples:
                  InitiatePayment400InputResponse:
                    $ref: '#/components/examples/InitiatePayment400InputResponse'
                  InitiatePayment400Response:
                    $ref: '#/components/examples/InitiatePayment400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                 type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
                # $ref: '#/components/schemas/InitiatePayment403Response'
              examples:
                InitiatePayment403Response:
                  $ref: '#/components/examples/403Response'
                InitiateCardTransactionsResponse403Response:
                  $ref: '#/components/examples/403Response1'  
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response1:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                  $ref: '#/components/examples/500Response'
                500Response1:
                  $ref: '#/components/examples/500Response1'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
      
      
  /banks/merchant/SBTESTPUBK_p8GqvFSFNCBahSJinczKd9aIPoRUZfda:
    get:
      tags:
      - PAYMENT METHOD
      summary: Get Banks
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: GetBanks
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: object
              examples:
                BanksResponse:
                  $ref: '#/components/examples/BanksResponse'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPMomo400Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
                404Response1:
                  $ref: '#/components/examples/404Response1'  
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      # security:
      # - Bearer: []
      x-codegen-request-body-name: Body    
      
  /payments/momo/otp:
    post:
      tags:
      - MOMO
      summary: OTP Momo
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: OTPMomo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPMomoRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
              examples:
                OTPMomoResponse:
                  $ref: '#/components/schemas/OTPMomoResponse'
                OTPMomoResponse1:
                  $ref: '#/components/examples/OTPMomoResponse1'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPMomo400Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
  /payments/charge:
    post:
      tags:
      - NON 3DS PAYMENT
      summary: Charge Card
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: ChargeCard
      requestBody:
        content:
          application/json:
            schema:
                type: object
            examples:
              ChargeCardRequest:
                  $ref: '#/components/examples/ChargeCardRequest'
        required: true
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: object
              examples:
                ChargeCardResponse:
                  $ref: '#/components/examples/ChargeCardResponse'
                ChargeCardResponse1:
                  $ref: '#/components/examples/ChargeCardResponse1'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
                400Response1:
                  $ref: '#/components/examples/400Response1'
                400Response2:
                  $ref: '#/components/examples/400Response2'
                400Response3:
                  $ref: '#/components/examples/400Response3' 
                400Response4:
                  $ref: '#/components/examples/400Response4'
                400Response5:
                  $ref: '#/components/examples/400Response5'
                400Response6:
                  $ref: '#/components/examples/400Response6'
                400Response7:
                  $ref: '#/components/examples/400Response7' 
                400Response8:
                  $ref: '#/components/examples/400Response8'  
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
                403Response2:
                  $ref: '#/components/examples/403Response2'
                403Response3:
                  $ref: '#/components/examples/403Response3'
                403Response4:
                  $ref: '#/components/examples/403Response4'  
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Basic: []
      x-codegen-request-body-name: Body
  /payments/query/STG10948E242065R569A22tAQM85EQW4:
    get:
      tags:
      - CARD
      summary: Check Status
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: CheckStatus
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckStatusResponse'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
                CreateOrder400Response1:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
                500Response4:
                    $ref: '#/components/examples/500Response4'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
  /payments/validate:
    post:
      tags:
      - ACCOUNT
      summary: Validate Transaction
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: ValidateTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateTransactionRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
              examples:
                ValidateTransactionResponse:
                  $ref: '#/components/examples/ValidateTransactionResponse'
                ValidateTransactionResponse1:
                  $ref: '#/components/examples/ValidateTransactionResponse1'
                ValidateTransactionResponse2:
                  $ref: '#/components/examples/ValidateTransactionResponse2'
                ValidateTransactionResponse3:
                  $ref: '#/components/examples/ValidateTransactionResponse3'  
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
  /payments/tokenize:
    post:
      tags:
      - TOKENIZE
      summary: Tokenize a Card
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: TokenizeaCard
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:  
                TokenizeaCardRequest:
                  $ref: '#/components/examples/TokenizeaCardRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizeCardResponse'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
                400Response9:
                  $ref: '#/components/examples/400Response9'
                400Response10:
                  $ref: '#/components/examples/400Response10'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizeCard401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                403Response3:
                  $ref: '#/components/examples/403Response3'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                404Response1:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Basic: []
      x-codegen-request-body-name: Body
  /payments/authorise:
    post:
      tags:
      - AUTHORISE
      summary: Authorise
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: Authorise
      requestBody:
        content:
          application/json:
            schema:
                type: object
            examples:
              AuthoriseRequest:
                $ref: '#/components/examples/AuthoriseRequest'
              AuthorisewithCardTokenRequest:
                $ref: '#/components/examples/AuthorisewithCardTokenRequest'
        required: true
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: object
              examples:
                Authorise201Response:
                  $ref: '#/components/examples/Authorise201Response'
                Authorise201Response1:
                  $ref: '#/components/examples/Authorise201Response1'
                AuthorisewithCardTokenResponse1:
                  $ref: '#/components/examples/AuthorisewithCardTokenResponse1'
                AuthorisewithCardTokenResponse:
                  $ref: '#/components/examples/AuthorisewithCardTokenResponse'  
                
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
                400Response1:
                  $ref: '#/components/examples/400Response1'
                400Response3:
                  $ref: '#/components/examples/400Response3' 
                400Response5:
                  $ref: '#/components/examples/400Response5'
                400Response6:
                  $ref: '#/components/examples/400Response6'
                400Response7:
                  $ref: '#/components/examples/400Response7' 
                400Response8:
                  $ref: '#/components/examples/400Response8' 
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              examples:
                401Response1:
                  $ref: '#/components/examples/401Response1'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
                403Response2:
                  $ref: '#/components/examples/403Response2'
                403Response3:
                  $ref: '#/components/examples/403Response3'
                403Response4:
                  $ref: '#/components/examples/403Response4'  
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                404Response1:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Basic: []
      x-codegen-request-body-name: Body
  /payments/authorise3ds:
    post:
      tags:
      - AUTHORISE
      summary: 3DS Authorise
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: 3DSAuthorise
      requestBody:
        content:
          application/json:
            schema:
                type: object
            examples:
              3DSAuthoriseRequest:
                $ref: '#/components/examples/3DSAuthoriseRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
              examples:
                3DSAuthoriseResponse:
                  $ref: '#/components/examples/3DSAuthoriseResponse'
                3DSAuthoriseResponse1:
                  $ref: '#/components/examples/3DSAuthoriseResponse1'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
                403Response2:
                  $ref: '#/components/examples/403Response2'
                403Response3:
                  $ref: '#/components/examples/403Response3'
                403Response4:
                  $ref: '#/components/examples/403Response4' 
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response1:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
  /payments/capture:
    post:
      tags:
      - PREAUTHORIZATION
      summary: Capture
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: Capture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureRequest'
        required: true
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                 type: object
              examples:
                CaptureResponse:
                  $ref: '#/components/examples/Capture201Response'
                CaptureResponse1:
                  $ref: '#/components/examples/Capture201Response1'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
                400Response2:
                  $ref: '#/components/examples/400Response2'
                400Response3:
                  $ref: '#/components/examples/400Response3' 
                400Response4:
                  $ref: '#/components/examples/400Response4'
                400Response5:
                  $ref: '#/components/examples/400Response5'
                400Response6:
                  $ref: '#/components/examples/400Response6'
                400Response8:
                  $ref: '#/components/examples/400Response8'
                400Response11:
                  $ref: '#/components/examples/400Response11'
                  
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                403Response:
                  $ref: '#/components/examples/403Response'
                403Response2:
                  $ref: '#/components/examples/403Response2'
                403Response3:
                  $ref: '#/components/examples/403Response3'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Basic: []
      x-codegen-request-body-name: Body
  /payments/refund:
    post:
      tags:
      - PREAUTHORIZATION
      summary: Refund
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: Refund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
        required: true
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund201Response'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
                400Response2:
                  $ref: '#/components/examples/400Response2'
                400Response3:
                  $ref: '#/components/examples/400Response3' 
                400Response4:
                  $ref: '#/components/examples/400Response4'
                400Response5:
                  $ref: '#/components/examples/400Response5'
                400Response6:
                  $ref: '#/components/examples/400Response6'
                400Response8:
                  $ref: '#/components/examples/400Response8'
                400Response11:
                  $ref: '#/components/examples/400Response11'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                403Response:
                  $ref: '#/components/examples/403Response'
                403Response2:
                  $ref: '#/components/examples/403Response2'
                403Response3:
                  $ref: '#/components/examples/403Response3'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Basic: []
      x-codegen-request-body-name: Body
  /payments/cancel:
    post:
      tags:
      - PREAUTHORIZATION
      summary: Cancel
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: Cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
        required: true
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cancel201Response'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
                400Response2:
                  $ref: '#/components/examples/400Response2'
                400Response3:
                  $ref: '#/components/examples/400Response3' 
                400Response4:
                  $ref: '#/components/examples/400Response4'
                400Response5:
                  $ref: '#/components/examples/400Response5'
                400Response6:
                  $ref: '#/components/examples/400Response6'
                400Response11:
                  $ref: '#/components/examples/400Response11'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                403Response2:
                  $ref: '#/components/examples/403Response2'
                403Response3:
                  $ref: '#/components/examples/403Response3'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response1'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Basic: []
      x-codegen-request-body-name: Body
  /recurring/subscribes:
    post:
      tags:
      - RECURRENT
      summary: Initiate Subscription
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: InitiateSubscription
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              InitiateSubscriptionRequest:
                $ref: '#/components/examples/InitiateSubscriptionRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateSubscriptionResponse'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
                400Response1:
                  $ref: '#/components/examples/400Response12'
                400Response3:
                  $ref: '#/components/examples/400Response13' 
                400Response4:
                  $ref: '#/components/examples/400Response14'
                400Response5:
                  $ref: '#/components/examples/400Response15'
                400Response6:
                  $ref: '#/components/examples/400Response16'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              examples:
                401Response:
                  $ref: '#/components/examples/401Response'
        403:
          description: Missing Header Token
          content:
            application/json:
              schema:
                type: object
              examples:
                CreateOrder403Response:
                  $ref: '#/components/examples/Order403Response'
                403Response:
                  $ref: '#/components/examples/403Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response:
                  $ref: '#/components/examples/404Response'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
              examples:
                409Response:
                  $ref: '#/components/examples/409Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
      x-codegen-request-body-name: Body
  /recurring/billingId/TPR2181t55PER542RPP1U1W4391WO:
    get:
      tags:
      - RECURRENT
      summary: Get a Subscription
      description: '"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
        do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum."'
      operationId: GetaSubscription
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubscriptionResponse'
        400:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              examples:
                400Response:
                  $ref: '#/components/examples/400Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                 type: object
              examples:
                400Response1:
                  $ref: '#/components/examples/404Response1'
                400Response2:
                  $ref: '#/components/examples/404Response2'    
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              examples:
                500Response:
                    $ref: '#/components/examples/500Response'
      deprecated: false
      security:
      - Bearer: []
components:
  schemas:
    GenerateEncryptedSecretKeyRequest:
        title: GenerateEncryptedSecretKeyRequest
        required:
        - key
        type: object
        properties:
          key:
            type: string
        example:
          key: SBTESTSECK_9Cb8dbqR5Rc2JwZaa77P5QYHzQaeGUcrkEMD1dEi.SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
    GenerateHashRequest:
      title: GenerateHashRequest
      required:
      - amount
      - callbackUrl
      - country
      - currency
      - email
      - paymentReference
      - productDescription
      - productId
      - publicKey
      type: object
      properties:
        publicKey:
          type: string
        amount:
          type: string
        currency:
          type: string
        country:
          type: string
        paymentReference:
          type: string
        email:
          type: string
        productId:
          type: string
        productDescription:
          type: string
        callbackUrl:
          type: string
      example:
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        amount: "10.00"
        currency: NGN
        country: NG
        paymentReference: 3791090233047WZ73QN
        email: mamadou.diouf@intouchgroup.net
        productId: "15013"
        productDescription: touch badge
        callbackUrl: https://gutouch.com
    PaymentLinkFromCheckoutRequest:
      title: PaymentLinkFromCheckoutRequest
      required:
      - amount
      - callbackUrl
      - country
      - currency
      - email
      - hash
      - hashType
      - paymentReference
      - productDescription
      - productId
      - publicKey
      type: object
      properties:
        publicKey:
          type: string
        amount:
          type: string
        currency:
          type: string
        country:
          type: string
        paymentReference:
          type: string
        email:
          type: string
        productId:
          type: string
        productDescription:
          type: string
        callbackUrl:
          type: string
        hash:
          type: string
        hashType:
          type: string
      example:
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        amount: "10.00"
        currency: NGN
        country: NG
        paymentReference: P791090233047WZ73QN
        email: mamadou.diouf@intouchgroup.net
        productId: "15013"
        productDescription: touch badge
        callbackUrl: https://gutouch.com
        hash: cfb5464ea21cce315ea72fb28f7ea45c4b61c443783eeff82dea98e57d445e15
        hashType: sha256
    OTPMomoRequest:
      title: OTPMomoRequest
      required:
      - linkingReference
      - otp
      type: object
      properties:
        linkingReference:
          type: string
        otp:
          type: string
      example:
        linkingReference: CF630837081601460887752
        otp: "81015"
    ValidateTransactionRequest:
      title: ValidateTransactionRequest
      required:
      - linkingReference
      - otp
      type: object
      properties:
        linkingReference:
          type: string
        otp:
          type: string
      example:
        linkingReference: F092648971601293723061
        otp: "123456"
    CaptureRequest:
      title: CaptureRequest
      required:
      - amount
      - country
      - currency
      - paymentReference
      - productDescription
      - publicKey
      type: object
      properties:
        paymentReference:
          type: string
        currency:
          type: string
        country:
          type: string
        productDescription:
          type: string
        amount:
          type: string
        publicKey:
          type: string
      example:
        paymentReference: PREAUTH124456789798765k321CB0
        currency: NGN
        country: NG
        productDescription: preauth test capture
        amount: "5.10"
        publicKey: SBTESTPUBK_dhrpzbRpR34l6VmqkCFOKA94L5E1jSTu
    RefundRequest:
      title: RefundRequest
      required:
      - amount
      - country
      - currency
      - paymentReference
      - productDescription
      - publicKey
      type: object
      properties:
        paymentReference:
          type: string
        currency:
          type: string
        country:
          type: string
        productDescription:
          type: string
        amount:
          type: string
        publicKey:
          type: string
      example:
        paymentReference: PREAUTH124456789798765432CB0
        currency: NGN
        country: NG
        productDescription: preauth test capture
        amount: "5.10"
        publicKey: SBTESTPUBK_dhrpzbRpR34l6VmqkCFOKA94L5E1jSTu
    CancelRequest:
      title: CancelRequest
      required:
      - country
      - paymentReference
      - productDescription
      - publicKey
      type: object
      properties:
        paymentReference:
          type: string
        publicKey:
          type: string
        country:
          type: string
        productDescription:
          type: string
      example:
        paymentReference: PREAUTH124456789798765k3L1CB0
        publicKey: SBTESTPUBK_dhrpzbRpR34l6VmqkCFOKA94L5E1jSTu
        country: NG
        productDescription: test void
    GenerateEncryptedSecretKeyResponse:
      title: GenerateEncryptedSecretKeyRequest
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          EncrytedSecKey:
            encryptedKey: oAX1OeAlwNt9BI5VEwBLlxtWgL2WaLT9kTc4EMaaZgXMfdhHXaqqVgapnQSOO4OZM2oLRPtqjJzwNLEEGqFSvam8MFz06U4fl/5TVwfWLMsRHq4mML9ExIaXRVn3bVm8
          message: Successful
    GenerateHashResponse:
      title: GenerateHashResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          message: Successful
          hash:
            hash: ae18321b005df1b9f16ca8590425e213366da3ab1d8aa2fa30d78dfa6ab9850a
    PaymentLinkFromCheckoutResponse:
      title: PaymentLinkFromCheckoutResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          payments:
            redirectLink: https://checkout.seerbitapi.com/#/?mid=SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u&paymentReference=39910902330P7WZ73QN
            paymentStatus: "08"
          message: Successful
    CreateOrder201Response:
      title: CreateOrderResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          message: Successful
          products:
          - amount: 100
            currency: NGN
            productId: 1089162.0
            productDescription: FODD ITEM
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil61c8cd7
            createdAt: 2020-10-16T11:41:05.723
            updatedAt: 2020-10-16T11:41:05.723
          - amount: 300
            currency: NGN
            productId: 3081869.0
            productDescription: SKIN CARE
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil9b10fbe
            createdAt: 2020-10-16T11:41:07.17
            updatedAt: 2020-10-16T11:41:07.17
    UpdateOrder201Response:
      title: CreateOrderResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          message: Successful
          products:
          - amount: 800
            currency: NGN
            productId: 1089162.0
            productDescription: FODD ITEM UPDATE
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil0f47b62
          - amount: 400
            currency: NGN
            productId: 3081869.0
            productDescription: SKIN CARE UPDATE TEST
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil1cc231f
    
    GetOrderByPublicKey201Response:
      title: GetOrderByPublicKeyResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          message: Successful
          products:
          - amount: 100
            currency: NGN
            productId: 1089162.0
            productDescription: FODD ITEM UPDATE
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil0f47b62
            createdAt: 2020-10-12T15:38:28
            updatedAt: 2020-10-17T21:56:54
          - amount: 300
            currency: NGN
            productId: 1089162.0
            productDescription: FODD ITEM UPDATE
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil0f47b62
            createdAt: 2020-10-12T15:38:29
            updatedAt: 2020-10-17T21:56:54
    GetOrderByPublicKeyAndPaymentReference201Response:
      title: GetOrderByPublicKeyResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          message: Successful
          products:
          - amount: 100
            currency: NGN
            productId: 1089162.0
            productDescription: FODD ITEM UPDATE
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil0f47b62
            createdAt: 2020-10-12T15:38:28
            updatedAt: 2020-10-17T21:56:54
          - amount: 300
            currency: NGN
            productId: 1089162.0
            productDescription: FODD ITEM UPDATE
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil0f47b62
            createdAt: 2020-10-12T15:38:29
            updatedAt: 2020-10-17T21:56:54
    GetOrderByPublicKeyAndOrderId201Response:
      title: GetOrderByPublicKeyResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          message: Successful
          products:
          - amount: 100
            currency: NGN
            productId: 1089162.0
            productDescription: FODD ITEM UPDATE
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil0f47b62
            createdAt: 2020-10-12T15:38:28
            updatedAt: 2020-10-17T21:56:54
          - amount: 300
            currency: NGN
            productId: 1089162.0
            productDescription: FODD ITEM UPDATE
            paymentReference: 0w0eimkizc41602513327447
            orderId: wil0f47b62
            createdAt: 2020-10-12T15:38:29
            updatedAt: 2020-10-17T21:56:54
    OTPMomoResponse:
      title: OTPMomoResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: S20
          payments:
            paymentReference: O456S5077987982QWEuWAT05M
            linkingReference: CF580053381599564199316
          message: Transaction is pending
    OTPMomo400Response:
      title: OTPMomoResponse
      type: object
      example:
        message: Bad Request
        error: There has been a problem with reading or understanding the request.
    CheckStatusResponse:
      title: CheckStatusResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: S20
          payments:
            redirectLink: http://checkout-seerbit.surge.sh
            amount: 100
            internationalChargedAmount: 155.2
            mobilenumber: 8.033456599E9
            publicKey: SBTESTPUBK_PjQ5dFOi522L383MlsQYUMAe6cZYviTF
            paymentType: CARD
            productId: Foods
            productDescription: RASPBERRY
            maskedPan: 5123-45xx-xxxx-0008
            gatewayMessage: Transaction is pending
            gatewayCode: S20
            gatewayref: F002672971602775508582
            mode: test
            redirecturl: http://checkout-seerbit.surge.sh
            channelType: Mastercard
            sourceIP: 127.0.0.1:3456
            deviceType: Apple Laptop
            cardBin: "512345"
            lastFourDigits: "0008"
            type: 3DSECURE
            country: NG
            currency: NGN
            paymentReference: SSQ22POtAQMVC85EQWB8
            processorCode: S20
            processorMessage: Transaction is pending
            reason: Transaction is pending
          customers:
            customerId: SBTfd3024f89b67e2f8a121
            customerName: Kola Victor
            customerMobile: 8.033456599E9
            customerEmail: kolawole@gmail.com
          message: Transaction is pending
    TokenizeCardResponse:
      title: CheckStatusResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: S20
          payments:
            paymentReference: KES0092992991
            linkingReference: SEERBIT428813491603106540088
            status: TOKENIZED
            card:
              bin: "512345"
              last4: "0008"
              token: tk_fa12ee73-9807-4a8a-bc91-8e81ca3c47ce
    TokenizeCard401Response:
      title: CheckStatusResponse
      type: object
      example:
        message: Invalid Authentication Token
        error: INPUT
    Refund201Response:
      title: RefundResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: PREAUTH1244567890987654321CB0
            status: REFUNDED
            card:
              bin: "512345"
              last4: "0008"
              token: tk_40a0503d-4586-4220-a69e-c69cc9293016
          message: APPROVED
    Cancel201Response:
      title: CancelResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: PREAUTH1244567890987654321CB0
            status: CANCELLED
            card:
              bin: "512345"
              last4: "0008"
          message: APPROVED
    InitiateSubscriptionResponse:
      title: InitiateSubscriptionResponse
      type: object
      example:
        status: SUCCESS
        data:
          code: S20
          payments:
            paymentReference: TPR2181t55PER540RPP1U1W4392WO
            linkingReference: F365652421603189345033
            redirectUrl: https://staging.seerbitapigateway.com/seerbit/card-dispatch?sredref=F365652421603189345033
          message: Transaction is pending
    GetSubscriptionResponse:
      title: GetSubscriptionResponse
      type: object
      example:
        status: SUCCESS
        data:
          subscriptions:
            publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
            amount: 100
            country: NG
            customerId: SBT4d26d47dcb33f9430507
            cardName: Kolade Samuel
            cardNumber: 5123-45xx-xxxx-0008
            plan: c6d4096c8244b5e0dbda
            status: INACTIVE
            billingId: TPR2181t55PER542RPP1U1W4391WO
            authorizationCode: 5f818a9f1191c423446b
            startDate: 2020-02-25 00:00:00
            createdAt: 1601385265000
          code: "00"
          message: Successful
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
    Basic:
      type: http
      scheme: basic
  examples:
    CreateOrderRequest:
      summary: An example of order after payment request payload
      value:
        paymentReference: 0w0eimkizc41602513327447
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        orders:
        - amount: "100.00"
          productId: 1089162.0
          productDescription: FODD ITEM
          currency: NGN
        - amount: "300.00"
          productId: 3081869.0
          productDescription: SKIN CARE
          currency: NGN
    CreateOrderRequest2:
      summary: An example of order before payment request payload
      value:
        email: test@mvaa.com
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        paymentReference: 2PPTG108Q13432E29P23R5L6W93I9
        fullName: ""
        orderType: BULK_BULK
        mobileNumber: ""
        callbackUrl: http://mvaa.ebs-rcm.com/payment
        country: NG
        currency: NGN
        amount: "250.00"
        orders: 
          - orderId: "1235567-113227878-64332q"
            currency: NGN
            amount: "125.00"
            productId: "0008162"
            productDescription: FRSC PLATE NUMBER
          - orderId: "2211567-2230578-754332"
            currency: NGN
            amount: "125.00"
            productId: "4030018"
            productDescription: WEIGHING AND ADMIN CHARGES
        
    cardRequestPayload:
      summary: An example of card request payload
      value:
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        amount: "100.00"
        fee: "10"
        fullName: Kola Victor
        mobileNumber: 8.028089445E9
        currency: NGN
        country: NG
        paymentReference: STG10948E242P65R569A20tAQM85EQW4
        email: kolawole@gmail.com
        productId: Foods
        productDescription: RASPBERRY
        clientAppCode: kpp64
        redirectUrl: http://checkout-seerbit.surge.sh
        paymentType: CARD
        scheduleId: ""
        channelType: Mastercard
        deviceType: Apple Laptop
        sourceIP: 127.0.0.1:3456
        cardNumber: "5123450000000008"
        cvv: "100"
        expiryMonth: "05"
        expiryYear: "21"
        pin: '####'
        source: ""
        retry: "false"
        invoiceNumber: 10000123abc123
        isCvv: "true"
    accountRequestPaylaod:
      summary: An example of account request payload
      value:
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        amount: "2000.00"
        fee: "10"
        fullName: Samuel Tosin
        mobileNumber: 8.028089445E9
        currency: NGN
        country: NG
        paymentReference: VERS2FURTHERTESTAc029456784
        email: kolawole@gmail.com
        productId: Foods
        productDescription: 'Uba Account Transaction '
        clientAppCode: kpp64
        channelType: BANK_ACCOUNT
        redirectUrl: https://checkout.seerbit.com
        callbackUrl: https://checkout.seerbit.com
        paymentType: ACCOUNT
        deviceType: Apple Laptop
        sourceIP: 127.0.0.1:3456
        accountName: kolawole Alagbon
        accountNumber: "1234567890"
        bankCode: "033"
        bvn: "12345678901"
        dateOfBirth: 4011984.0
        source: ""
        retry: "false"
        invoiceNumber: 1234567891abc123ac
    transferRequestPaylaod:
      summary: An example of transfer request payload
      value:
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        fullName: Samuel Teas
        amount: "20.00"
        fee: 10
        redirectUrl: http://checkout-seerbit.surge.sh
        sourceIP: 127.0.0.1:3456
        cardNumber: 5123450000000008
        isCvv: "true"
        pocketReference: "12345678543"
        callbackUrl: https://checkout.seerbit.com
        accountName: kolawole Alagbon
        accountNumber: "1234567890"
        bankCode: "033"
        bvn: "12345678901"
        amountControl: FIXEDAMOUNT
        channelType: Mastercard
        mobileNumber: "08033456539"
        cvv: "100"
        expiryMonth: 5
        expiryYear: 21
        pin: '####'
        type: 3DSECURE
        source: ""
        currency: NGN
        country: NG
        paymentReference: L16FDE3311RSEY2AUA3QWERQPU
        email: kolawole@gmail.com
        productId: Foods
        productDescription: RASPBERRY
        clientAppCode: kpp64
        paymentType: CARD
        deviceType: Apple Laptop
        walletDaysActive: "1"
        retry: "false"
        invoiceNumber: 1234567890abc123ac
    momoRequestPaylaod:
      summary: An example of momo request payload
      value:
        fullName: john doe
        email: johndoe@gmail.com
        mobileNumber: 2.48360953E8
        publicKey: SBPUBK_QGOX9NBAHWDYY1PAFSG2PTDOSSZYEWXM
        paymentReference: O456S5077907982QWEuWAT05M
        deviceType: nokia 3310
        sourceIP: 1.0.1.0
        currency: GHS
        productDescription: snacks
        country: GH
        network: MTN
        voucherCode: ""
        fee: "0.00"
        amount: "1.00"
        productId: grocery
        paymentType: MOMO
    AuthoriseRequest:
      summary: An example of Authorise Request payload
      value:
          paymentReference: PREAUTH124456789798765k3K1CB0
          publicKey: SBTESTPUBK_dhrpzbRpR34l6VmqkCFOKA94L5E1jSTu
          cardNumber: "5123450000000008"
          cvv: "100"
          expiryMonth: "05"
          expiryYear: "21"
          currency: NGN
          country: NG
          productDescription: preauth test capture
          amount: "100.00"
          email: johndoe@gmail.com
          fullName: john doe    
    AuthorisewithCardTokenRequest:      
      summary: AuthorisewithCardToken Request payload
      value:
        paymentReference: 30451A789S987643128hgffsfP6K
        publicKey: SBTESTPUBK_dhrpzbRpR34l6VmqkCFOKA94L5E1jSTu
        cardToken: tk_b0a4b2f6-9ac1-485b-b031-9e018d9479bd
        currency: NGN
        country: NG
        productDescription: preauth test capture
        amount: "1.00"
        email: johndoe@gmail.com
        fullName: john doe
        callbackUrl: https://google.com
    3DSAuthoriseRequest:
      summary: 3DSAuthorise Request payload
      value:
        paymentReference: 30451B789S987643108hgfdsfP6W
        publicKey: SBPUBK_OMX6ZNRZPLIHQ9Y0ZG6FCNR0EAYIGIAT
        cardNumber: "5242820813772165"
        cvv: "865"
        expiryMonth: "02"
        expiryYear: "22"
        currency: NGN
        country: NG
        productDescription: preauth test capture
        amount: "1.00"
        email: johndoe@gmail.com
        fullName: john doe
        callbackUrl: https://google.com
    TokenizeaCardRequest:
      summary: 3DSAuthorise Request payload
      value:
        publicKey: SBPUBK_OMX6ZNRZPLIHQ9Y0ZG6FCNR0EAYIGIAT
        amount: "0.00"
        fullName: john doe
        mobileNumber: 8.033456599E9
        currency: NGN
        country: NG
        paymentReference: KES0092992991
        email: johndoe@gmail.com
        productId: Foods
        productDescription: RASPBERRY
        cardNumber: "5123450000000008"
        cvv: "100"
        expiryMonth: "05"
        expiryYear: "21"
    InitiateSubscriptionRequest:
      summary: Initiate Subscription Request payload
      value:
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        paymentReference: TPR2181t55PKR540RPP1U1W4392WO
        planId: ""
        cardNumber: "5123450000000008"
        expiryMonth: "05"
        callbackUrl: https://www.google.com
        expiryYear: "21"
        cvv: "100"
        amount: "1000.00"
        currency: NGN
        productDescription: Pilot Test Subscription
        productId: Terrain
        country: NG
        startDate: "2020-02-25 00:00:00"
        cardName: Kolade Samuel
        billingCycle: WEEKLY
        email: akintoyekolawole@gmail.com
        mobileNumber: 08033456500
        customerId: "12345678901234"
        pin: 0999
        type: 3DSECURE
        billingPeriod: "1"
        subscriptionAmount: true
    ChargeCardRequest:
      summary: 3DSAuthorise Request payload
      value:
        publicKey: SBTESTPUBK_dhrpzbRpR34l6VmqkCFOKA94L5E1jSTu
        amount: "10.00"
        fullName: Diei Okechukwu Peter
        mobileNumber: 8.030540611E9
        currency: NGN
        country: NG
        paymentReference: NGN0000037Q35
        email: okechukwu.diei2@gmail.com
        productId: Foods
        productDescription: RASPBERRY
        cardNumber: "5123450000000008"
        expiryMonth: "05"
        expiryYear: "21"
    UpdateOrderRequest:
      summary: 3DSAuthorise Request payload
      value:
        paymentReference: 0w0eimkizc41602513327447
        publicKey: SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u
        orders:
        - amount: "800.00"
          productId: 1089162.0
          productDescription: FODD ITEM UPDATE
          currency: NGN
          orderId: wil0f47b62
        - amount: "400.00"
          productId: 3081869.0
          productDescription: SKIN CARE UPDATE TEST
          currency: NGN
          orderId: wil1cc231f
    InitiateAccountPaymentResponse:
      summary: An example of account response payload
      value:
          status: SUCCESS
          data:
            code: "20"
            payments:
              paymentReference: VERS2FURTHERTESTAc722456784
              linkingReference: F282866521599191373372
            message: Transaction is pending
    InitiateAccountPaymentS12Response:
      summary: An example of account response S12 payload
      value:
          status: SUCCESS
          data:
            code: "S12"
            payments: {}
            message: Cant process at this moment, please try again Transaction reference must be unique
    InitiateAccountPaymentS7Response:
      summary: An example of account response S7 payload
      value:
          status: SUCCESS
          data:
            code: "S7"
            payments: {}
            message: Cant process at this moment, please try again Invalid Amount = Amount cannot be less than 100.0        
    InitiateCardTransactionsResponse:
      summary: An example of card response payload
      value:
        status: SUCCESS
        data:
          code: "S20"
          payments:
            paymentReference: STG10342E29R569A22QAQMP5EQW8
            linkingReference: F569896131602965690855
            redirectUrl: https://staging.seerbitapigateway.com/seerbit/card-dispatch?sredref=F569896131602965690855
          message: Transaction is pending
    InitiateCardTransactionsS18Response:
      summary: An example of card S18 response payload
      value:
        status: SUCCESS
        data:
          code: "S18"
          payments: {}
          message: Transaction reference must be unique
    InitiateCardTransactionsS12Response:
      summary: An example of card S12 response payload
      value:
        status: SUCCESS
        data:
          code: 'S12'
          payments: {}
          message: Transaction Failed
    InitiateTransferResponse:
      summary: An example of transfer response payload
      value:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: NGN0100067Q35
            amount: 20
            walletName: SeerBit
            wallet: "9956411533"
            bankName: Providus Bank
            accountNumber: "9956411533"
          message: ACCOUNT OPENED SUCCESSFULLY
    GhanaMomoResponse:
      summary: An example of momo response payload
      value:
        status: SUCCESS
        data:
          code: NIP
          payments:
            paymentReference: O456S5077987982QWEuWAT05M
            linkingReference: CF580053381599564199316
          message: Kindly Enter Otp
    404Response:
      summary: An example of 404 response payload
      value:
        error: Not Found
    404Response1:
      summary: An example of 404 response payload
      value:
        message: Not Found
        error: The server can not find the requested resource 
    404Response2:
      summary: An example of 404 response payload
      value:
        message: Subscription Not Found
        error: NOT_FOUND
    401Response:
      summary: An example of 401 response payload
      value:
        message: Invalid Authentication Token
        error: INPUT
    400Response:
      summary: An example of 400 response payload
      value:
        message: Bad Request
        error: There has been a problem with reading or understanding the request.
        
    403Response1:
      summary: An example of 403 response payload
      value:
        message: Header Token Missing
        error: PERMISSION
    403Response:
      summary: An example of 403 response payload
      value:
        message: Confirm Merchant Environment
        error: PERMISSION
    InitiatePayment400Response:
      summary: An example of 400 response payload
      value:
        message: Payment Type cannot be null
        error: INPUT
    InitiatePayment400InputResponse:
      summary: An example of 400 response payload
      value:
        message: Bad Request
        error: There has been a problem with reading or understanding the request.
    500Response:
      summary: An example of 500 response payload
      value:
        message: Internal Server Error
        error: PROCESSING    
    500Response1:
      summary: An example of 500 response payload
      value:
        message: Transaction with reference exists
        error: PROCESSING
    500Response2:
      summary: An example of 500 response payload
      value:
        message: Transaction with paymentReference does not exist
        error: PROCESSING
    500Response3:
      summary: An example of 500 response payload
      value:
        message: Transaction with paymentReference does not exist
        error: PROCESSING
    500Response4:
      summary: An example of 500 response payload
      value:
        message: No transaction found
        error: PROCESSING
    500Response5:
      summary: An example of 500 response payload
      value:
        message: Transaction Exists
        error: PROCESSING    
    PaymentLinkFromCheckout500Response:
      summary: An example of PaymentLinkFromCheckout 500 response payload
      value:
        message: INVALID HASH
        error: PROCESSING
    PaymentLinkFromCheckout500Response1:
      summary: An example of PaymentLinkFromCheckout 500 response payload
      value:
        message: Transaction Exists
        error: PROCESSING
    PaymentLinkFromCheckout500Response2:
      summary: An example of PaymentLinkFromCheckout 500 response payload
      value:
        error: PROCESSING
    CreateOrder404Response:
      summary: An example of 404 response payload
      value:
        message: Not Found
        error: The server can not find the requested resource
    Order404Response1:
      summary: An example of 404 response payload
      value:
        message: Transaction Not Found
        error: NOT_FOUND
    Order404Response2:
      summary: An example of 404 response payload
      value:
        message: Orders Not Found
        error: NOT_FOUND
    Order403Response:
      summary: An example of 403 response payload
      value:
        message: Header Token Missing
        error: PERMISSION
    OTPMomoResponse1:
      summary: An example of 403 response payload
      value:
        status: SUCCESS
        data:
            code: S12
            payments:
                reference: O456S5077907982QWEuWAT05M
                linkingreference: CF630837081601460887752
        message: Header Token Missing
    403Response2:  
      summary: An example of 403 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Bad credentials = invalid public key
    403Response3:  
      summary: An example of 403 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Bad credentials
    403Response4:  
      summary: An example of 403 response payload
      value:
        data:
            code: S12
            message: Invalid/Missing parameters = paymentReference
    400Response1:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Duplicate transaction reference
    400Response2:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Invalid/Missing parameters = publicKey
    400Response3:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Invalid/Missing parameters = amount
    400Response4:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Invalid/Missing parameters = paymentReference
    400Response5:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Invalid/Missing parameters = currency
    400Response6:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Invalid/Missing parameters = country
    400Response7:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Missing Card details
    400Response8:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Incomplete Card details 
    400Response9:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Invalid Card Number
    400Response10:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: Bad credentials = invalid public key
    400Response11:
      summary: An example of 400 response payload
      value:
        status: ERROR
        data:
            code: S12
            message: No authorised transaction found for this reference
    400Response12:
      summary: An example of 400 response payload
      value:
        message: Payment Reference cannot be null
        error: INPUT
    400Response13:
      summary: An example of 400 response payload
      value:
        message: Amount cannot be null
        error: INPUT
    400Response14:
      summary: An example of 400 response payload
      value:
        message: Public Key cannot be null
        error: INPUT
    400Response15:
      summary: An example of 400 response payload
      value:
        message: Country cannot be null
        error: INPUT
    400Response16:
      summary: An example of 400 response payload
      value:
        message: Currency cannot be null
        error: INPUT
    409Response:
      summary: An example of 409 response payload
      value:
        message: Transaction with reference exists
        error: PROCESSING    
    ChargeCardResponse:
      summary: An example of 200 response payload
      value:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: NGN0100067Q35
            linkingReference: SEERBIT146140441602959589412
            status: CAPTURED
          card:
            bin: "512345"
            last4: "0008"
            token: tk_edcac221-63e5-4baf-8846-4922af4a10e6
          message: APPROVED        
    ChargeCardResponse1:
      summary: An example of 200 response payload
      value:
        status: SUCCESS
        data:
          code: "S12-91"
          payments:
            paymentReference: NGN0100067Q35
            linkingReference: SEERBIT146140441602959589412
            status: FAILED
          card:
            bin: "512345"
            last4: "0008"
            token: tk_edcac221-63e5-4baf-8846-4922af4a10e6
          message: FAILURE = TIMED_OUT (Issuer or switch inoperative)  
    ValidateTransactionResponse:
      summary: An example of 200 response payload
      value:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: VERS2FURTHERTESTAc722456784
            linkingReference: F282866521599191373372
            authoption: []
          message: Successful
    ValidateTransactionResponse1:
      summary: An example of 200 response payload
      value:
        status: SUCCESS
        data:
          code: "RR"
          payments:
            paymentReference: VERS2FURTHERTESTAc722456784
            linkingReference: F282866521599191373372
            authoption: []
          message: Sorry payment already processed
    ValidateTransactionResponse2:
      summary: An example of 200 response payload
      value:
        status: SUCCESS
        data:
          code: "S7"
          payments: null
          message: operation failed
    ValidateTransactionResponse3:
      summary: An example of 200 response payload
      value:
        status: SUCCESS
        data:
          code: "S5"
          payments:
            reference: VERS2FURTHERTESTAc722456784
            authoption: []
          message: Invalid/Missing parameters = transaction/otp
    Authorise201Response:
      summary: An example of 200 response payload
      value:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: PREAUTH1244567890987654321CB0
            linkingReference: F938003831601492624719
            status: AUTHORIZED
            card:
              bin: "512345"
              last4: "0008"
              token: tk_40a0503d-4586-4220-a69e-c69cc9293016
          message: APPROVED
    Authorise201Response1:
      summary: An example of 200 response payload
      value:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: PREAUTH1244567890987654321CB0
            linkingReference: F938003831601492624719
            status: AUTHORIZED
            card:
              bin: "512345"
              last4: "0008"
              token: tk_40a0503d-4586-4220-a69e-c69cc9293016
          message: FAILURE = TIMED_OUT (Issuer or switch inoperative)     
    401Response1:
      summary: An example of 401 response payload
      value:
        status: ERROR
        data:
          code: S12
          message: Invalid credentials
    3DSAuthoriseResponse:
      summary: An example of 3DSAuthoriseResponse payload
      value:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: 30451A789S987643128hgfdsfP6W
            redirectLink: https://seerbitapigateway.com/seerbit/card-dispatch?sredref=F535459411601493328771
            linkingReference: F535459411601493328771
            status: AUTHORISATION PENDING
          message: Transaction is pending 
    3DSAuthoriseResponse1:
      summary: An example of 3DSAuthoriseResponse payload
      value:
        status: SUCCESS
        data:
          code: "S100"
          message: Transaction Not Completed
    AuthorisewithCardTokenResponse1:
      summary: An example of Authorise with Card Token Response payload
      value:
        status: SUCCESS
        data:
          code: "S12-91"
          payments:
            paymentReference: 31451A789S987643128hgffsfP6K
            linkingReference: F535459411601493328771
            status: FAILED
            card:
              bin: '512345'
              last4: 0008
              token: tk_b0a4b2f6-9ac1-485b-b031-9e018d9479bd
          message: FAILURE = TIMED_OUT (Issuer or switch inoperative) 
    AuthorisewithCardTokenResponse:
        summary: An example of Authorise with Card Token Response payload
        value:
          status: SUCCESS
          data:
            code: "00"
            payments:
              paymentReference: 30451A789S987643128hgfdsfP6W
              linkingReference: F135171921601494142535
              status: AUTHORIZED
              card:
                bin: '512345'
                last4: 0008
                token: tk_b0a4b2f6-9ac1-485b-b031-9e018d9479bd
            message: APPROVED 
    Capture201Response:
      summary: An example of A Capture 201 Response payload
      value:
        status: SUCCESS
        data:
          code: "00"
          payments:
            paymentReference: PREAUTH1244567890987654321CB0
            status: PARTIALLY_CAPTURED
            card:
              bin: "512345"
              last4: "0008"
              token: tk_40a0503d-4586-4220-a69e-c69cc9293016
          message: APPROVED
    Capture201Response1:
      summary: An example of A Capture 201 Response payload
      value:
        status: SUCCESS
        data:
          code: "S12"
          payments:
            paymentReference: PREAUTH1244567890987654321CB0
            card:
              bin: "512345"
              last4: "0008"
              token: tk_40a0503d-4586-4220-a69e-c69cc9293016
          message: INVALID_REQUEST = Transaction already exists. Retry not supported as it is not the last transaction on the order.
    CreateOrder200Response:
      summary: An example of A Create order before payment 200 Response payload
      value:
        status: SUCCESS
        data:
          code: "00"
          payments: 
            amount: 250
            paymentReference: 2PPTG108QL13432E29P23R5L6W93I9
            paymentStatus: "08"
            redirectLink: "https://checkout.seerbitapi.com/?mid=SBTESTPUBK_9sN3TuLgW6a9redEfY48cKKkUa09Pz2u&paymentReference=2PPTG108QL13432E29P23R5L6W93I9"
          message: Successful 
    BanksResponse:
      summary: An example of A Get Bank 201 Response payload
      value:
        status: SUCCESS
        data: 
          code: "00"
          merchantBanks:
            - bankName: Guarantee Trust Bank
              bankCode: "058"
              url:
              logo:
              status: "ACTIVE"
              minimumAmount: 100
              requiredFields:
                accountName: YES
                accountNumber: NO
                isBankCode: YES
                bvn: NO
                dateOfBirth: NO
                mobileNumber: NO
            - bankName: United Bank for Africa
              bankCode: 033
              url:
              logo:
              status: ACTIVE
              minimumAmount: 100
              requiredFields: 
                accountName: YES
                accountNumber: YES
                isBankCode: YES
                bvn: YES
                dateOfBirth: YES
                mobileNumber: NO
            - bankName: First Bank of Nigeria
              bankCode: 011
              url:
              logo:
              status: ACTIVE
              minimumAmount: 100
              requiredFields:
                accountName: NO
                accountNumber: NO
                isBankCode: YES
                bvn: NO
                dateOfBirth: NO
                mobileNumber: NO
            - bankName: Sterling Bank
              bankCode: 232
              url:
              logo:
              status: ACTIVE
              minimumAmount: 100
              requiredFields:
                accountName: YES
                accountNumber: YES
                isBankCode: YES
                bvn: NO
                dateOfBirth: NO
                mobileNumber: YES
            - bankName: Wema Bank
              bankCode: 035
              url:
              logo:
              status: ACTIVE
              minimumAmount: 100
              requiredFields:
                accountName: YES
                accountNumber: YES
                isBankCode: YES
                bvn: NO
                dateOfBirth: NO
                mobileNumber: YES
            - bankName: Zenith Bank
              bankCode: 057
              url:
              logo:
              status: ACTIVE
              minimumAmount: 100
              requiredFields:
                accountName: YES
                accountNumber: YES
                isBankCode: YES
                bvn: YES
                dateOfBirth: YES
                mobileNumber: NO
          message: "Successful"      
